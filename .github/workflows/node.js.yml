# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Package winx64

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Build/release Electron app
        env:
          GITHUB_TOKEN: ${{ secrets.FRANK_PUBLISH }}
        run: |
          yarn install
          yarn package:win64

      - name: Setting Environment Variables
        run: |
          $PRODUCT_NAME="Creality Laser"
          $PACKAGE_NAME="Creality-Laser"
          $PACKAGE_VERSION=node -e "console.log(require('./src/package.json').version)"
          $RELEASE="${PACKAGE_NAME}-${PACKAGE_VERSION}"

          $INSTALLER_ASSET_PATH="./release/${PRODUCT_NAME} ${PACKAGE_VERSION}.exe"
          $INSTALLER_ASSET_NAME="${RELEASE}-win-x64.exe"

          $INSTALLER_AU_ASSET_NAME="${PACKAGE_NAME}-Setup-${PACKAGE_VERSION}.exe"
          echo "INSTALLER_ASSET_PATH=${INSTALLER_ASSET_PATH}" >> ${Env:GITHUB_ENV}
          echo "INSTALLER_ASSET_NAME=${INSTALLER_ASSET_NAME}" >> ${Env:GITHUB_ENV}
          echo "INSTALLER_AU_ASSET_NAME=${INSTALLER_AU_ASSET_NAME}" >> ${Env:GITHUB_ENV}

      - name: Upload Release Asset - Windows x64 Installer
        id: upload-release-asset-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.FRANK_PUBLISH }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.INSTALLER_ASSET_PATH }}
          asset_name: ${{ env.INSTALLER_ASSET_NAME }}
          asset_content_type: application/octet-stream
